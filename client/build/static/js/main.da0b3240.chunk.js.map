{"version":3,"sources":["components/DataTableBody.js","components/DataTableHeader.js","components/DataTable.js","components/Selector.js","components/DataViewer.js","containers/DataViewerContainer.js","hooks/useFetchVariables.js","hooks/useLimitData.js","hooks/useFetchVariableData.js","App.js","reportWebVitals.js","index.js"],"names":["DataTableBody","data","map","valueObj","i","Object","values","value","j","DataTableHeader","headers","header","replace","DataTable","style","margin","width","keys","Selector","options","onVariableSelection","defaultValue","onChange","e","target","disabled","variable","DataViewer","variables","remainder","length","DataViewerContainer","useState","selectedVariable","setSelectedVariable","setVariables","useEffect","a","fetch","response","json","body","status","Error","message","fetchData","useFetchVariables","limitedData","setLimitedData","setRemainder","slice","Math","max","useLimitData","setData","useFetchVariableData","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da0b3240.chunk.js","sourcesContent":["export default function DataTableBody({ data }) {\r\n  return (\r\n    <tbody>\r\n      {data.map((valueObj, i) => (\r\n        <tr key={i}>\r\n          {Object.values(valueObj).map((value, j) => (\r\n            <td key={j}>{value}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n","export default function DataTableHeader({ headers }) {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {headers.map((header) => (\r\n          <th key={header}>\r\n            {header\r\n              .replace(\"avg_\", \"average \")\r\n              .replace(\"variable_count\", \"count\")}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n","import DataTableBody from \"./DataTableBody\";\r\nimport DataTableHeader from \"./DataTableHeader\";\r\n\r\nexport default function DataTable({ data }) {\r\n  return (\r\n    <table style={{ margin: \"5vh auto\", width: \"60%\" }}>\r\n      <DataTableHeader headers={Object.keys(data[0])} />\r\n      <DataTableBody data={data} />\r\n    </table>\r\n  );\r\n}\r\n","export default function Selector({ options, onVariableSelection }) {\r\n  return (\r\n    <select\r\n      defaultValue=\"\"\r\n      onChange={(e) => onVariableSelection(e.target.value)}\r\n    >\r\n      <option value=\"\" disabled>\r\n        Select a variable\r\n      </option>\r\n      {options.map((variable) => (\r\n        <option value={variable} key={variable}>\r\n          {variable}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n","import DataTable from \"./DataTable\";\r\nimport Selector from \"./Selector\";\r\n\r\nexport default function DataViewer({\r\n  variables,\r\n  onVariableSelection,\r\n  data,\r\n  remainder,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Selector options={variables} onVariableSelection={onVariableSelection} />\r\n      {data && data.length > 0 && <DataTable data={data} />}\r\n      {remainder !== 0 && <p>{remainder} non-displayed values left</p>}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport DataViewer from \"../components/DataViewer\";\r\nimport useFetchVariables from \"../hooks/useFetchVariables\";\r\nimport useFetchVariableData from \"../hooks/useFetchVariableData\";\r\nimport useLimitData from \"../hooks/useLimitData\";\r\n\r\nexport default function DataViewerContainer() {\r\n  const [selectedVariable, setSelectedVariable] = useState(null);\r\n\r\n  const variables = useFetchVariables();\r\n  const [data, remainder] = useLimitData(\r\n    useFetchVariableData(selectedVariable)\r\n  );\r\n\r\n  return (\r\n    <DataViewer\r\n      variables={variables}\r\n      onVariableSelection={setSelectedVariable}\r\n      data={data}\r\n      remainder={remainder}\r\n    />\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetchVariables() {\r\n  const [variables, setVariables] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\"api/variables\");\r\n      const body = await response.json();\r\n      if (response.status !== 200) throw Error(body.message);\r\n\r\n      setVariables(body);\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return variables;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useLimitData(data) {\r\n  const [limitedData, setLimitedData] = useState([]);\r\n  const [remainder, setRemainder] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLimitedData(data.length > 100 ? data.slice(0, 100) : data);\r\n    setRemainder(Math.max(0, data.length - 100));\r\n  }, [data]);\r\n\r\n  return [limitedData, remainder];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetchVariableData(variable) {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(`api/${variable}`);\r\n      const body = await response.json();\r\n      if (response.status !== 200) throw Error(body.message);\r\n\r\n      setData(body);\r\n    }\r\n\r\n    if (variable) fetchData();\r\n  }, [variable]);\r\n\r\n  return data;\r\n}\r\n","import \"./App.css\";\nimport DataViewerContainer from \"./containers/DataViewerContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h3>Apricity Test App</h3>\n      <DataViewerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}